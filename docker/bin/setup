#!/bin/bash
echo "===> Update&install all needed packages"

apk add --no-cache \
binutils \
coreutils \
cpio \
curl \
dnsmasq \
dosfstools \
e2fsprogs \
file \
grep \
iproute2 \
iptables \
libarchive-tools \
qemu-img \
qemu-system-aarch64 \
qemu-system-arm \
rpm2cpio \
sudo \
unzip \
util-linux

echo "===> Networking settings ..."
# Create the kvm node (required --privileged)
if [ ! -e /dev/kvm ]; then
    set +e
    mknod /dev/kvm c 10 232
    set -e
fi

# If we have a BRIDGE_IF set, add it to /etc/qemu/bridge.conf
mkdir -p /etc/qemu
echo "allow rasp-br0" >> /etc/qemu/bridge.conf

# Make sure we have the tun device node
if [ ! -e /dev/net/tun ]; then
    set +e
    mkdir -p /dev/net
    mknod /dev/net/tun c 10 200
    set -e
fi

## download
download() {
    curl -sL -O -C - "$1"
}

## install_from_git
install_from_git() {
    cd /home
    download https://github.com/M0Rf30/simonpi/archive/master.zip
    unzip master.zip
    cd simonpi-master
    install -Dm755 simonpi /usr/bin/simonpi
    install -dm755 /opt/simonpiemu/
    cp -r simonpiemu/* /opt/simonpiemu/
    sed -i "s/OPT=./OPT=\/opt/g" /usr/bin/simonpi
    cd ..
    rm -rf simonpi-master master.zip
}

install_ovmf() {
    # Need to be manually bumped
    fedora_ver=32
    pkgver=20200201
    pkgrel=1

    cd /home

    # OVMF ARM
    download https://fedora.mirror.garr.it/fedora/linux/updates/"${fedora_ver}"/Everything/x86_64/Packages/e/edk2-arm-"${pkgver}"stable-"${pkgrel}".fc"${fedora_ver}".noarch.rpm
    rpm2cpio edk2-arm-"${pkgver}"stable-"${pkgrel}".fc"${fedora_ver}".noarch.rpm | cpio -idmv
    # OVMF AARCH64
    download https://fedora.mirror.garr.it/fedora/linux/updates/"${fedora_ver}"/Everything/x86_64/Packages/e/edk2-aarch64-"${pkgver}"stable-"${pkgrel}".fc"${fedora_ver}".noarch.rpm
    rpm2cpio edk2-aarch64-"${pkgver}"stable-"${pkgrel}".fc"${fedora_ver}".noarch.rpm | cpio -idmv
    cp -av usr /
    cd /usr/share/AAVMF
    ln -sf ../edk2/arm/vars-template-pflash.raw AAVMF32_VARS.fd
}
echo "===> Installing Sim on Pi"
install_from_git simonpi

echo "===> Installing AVMF ARM & AARCH64"
install_ovmf

echo "===> DONE $0 $*"

